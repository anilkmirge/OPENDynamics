<?xml version="1.0" encoding="UTF-8"?>
<controller-info>

    <!-- This is the host name or the IP address of the AppDynamics Controller e.g. 192.168.1.22 or myhost or myhost.abc.com
    This is the same host that you use to access the AppDynamics browser based User interface.
    This can be overridden with the system property '-Dappdynamics.controller.hostName' -->
    <controller-host>hostName</controller-host>

    <!-- This is the http(s) port of the AppDynamics Controller , If 'controller-ssl-enabled' below is set to true, you must
    specify the HTTPS port of the Controller, otherwise specify the HTTP port. Controller gets installed at port 8090 by default.
    If you set 'controller-ssl-enabled' to true, the Controller installs at port 8181.
    If you are using a saas controller, the ssl port is 443
    This is the same port that you use to access the AppDynamics browser based User interface.
    This can be overridden with the system property '-Dappdynamics.controller.port' -->
    <controller-port>80</controller-port>

    <!-- This specifies if the AppDynamics agent should use SSL(HTTPS) to connect to the Controller. If you set this to true,
    the controller port property above should be set to the HTTPs port of the Controller.
    This can be overridden with the system property '-Dappdynamics.controller.ssl.enabled' -->
    <controller-ssl-enabled>false</controller-ssl-enabled>
    
    <!-- Specify the logical business application name that this jvm node belongs to.
    Note that this is not the deployment name(ear/war/jar) on the application server.
    examples for a business application name can be 'ACME Portal' if you are monitoring the portal application or 'ACME ECommerce' etc.
    If a business application of this name does not exist it will be created automatically.
    This can be overridden with the system property '-Dappdynamics.agent.applicationName' -->
    <application-name>OPENDynamics</application-name>

    <!-- Specify the logical business tier this node belongs to.
    examples for a business tier can be 'ACME Frontend' or 'ACME Backend Service' etc. If your JVM / AppServer start up script already
     has a system property that can be used as the tier name e.g.-Dserver.tier then you may refer
    to the same as ${server.tier} This can be overridden with the system property '-Dappdynamics.agent.tierName'
    You may also use expressions as ${server.tier}_${some.property}.MyTier to define the tier name.
    -->
    <tier-name>OPENDynamicsTier</tier-name>

    <!-- Specify a unique name for this jvm node. The name must be unique within the business application. e.g. weblogicinstance23 or
    hweb24. If your JVM / AppServer start up script already has a system property that can be used as a node name, e.g. -Dserver.name
    then you may refer to the same as ${server.name}. The value for server.name will be used as appdynamics node name
    The value specified in this xml can be overridden with the system property '-Dappdynamics.agent.nodeName'.
    You may also use expressions as ${server.name}_${host.name}.MyNode to define the node name.
    -->
    <node-name>WildFly8</node-name>
    
    <!-- Refers to the runtime directory for all runtime files (logs, transaction configuration) for agent nodes using this agent
    installation. The property is optional, by default set to agent-installation-directory . If specified All Agent logs are written
     to agent-runtime-dir/logs/node-name and transaction configuration to agent-runtime-dir/conf/node-name directory
    This can be overridden with the system property '-Dappdynamics.agent.runtime.dir' -->
    <agent-runtime-dir></agent-runtime-dir>

    <!-- Set this flag to 'true' to enable features required for AppDynamics Orchestration.
    Currently this flag enables the agent to resolve the AppDynamics Controller host and port
    when the host machine where this agent resides is created through AppDynamics Orchestration.
    If the host machine where this agent resides is NOT created through Orchestration then LEAVE
    this flag set to 'false'. -->
    <enable-orchestration>false</enable-orchestration>

    <!-- If the AppDynamics Controller is running in multi-tenant mode or you are using the AppDynamics SaaS Controller
    you must specify the account name and account access key for this agent to authenticate with the controller.
    If you are running in single-tenant mode (the default) there is no need to configure these values. -->
    <account-name>account-name</account-name>
    <account-access-key>account-access-key</account-access-key>

    <!-- Change to 'true' only under special circumstances where this agent has been moved to a new application and/or tier
    from the UI but you want to override that move by specifying a new application name and/or tier name in the agent configuration. -->
    <force-agent-registration>false</force-agent-registration>

</controller-info>
